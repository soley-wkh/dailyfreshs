"""
Django settings for dailyfresh project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'h7&ebmw-9)io%116rsu9nuw5h7wo5frbe=)_sul!_ud1+8*3!1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tinymce',  # 富文本编辑器
    'haystack',  # 注册全文搜索框架
    'apps.user',  # 用户模块
    'apps.goods',  # 商品模块
    'apps.cart',  # 购物车模块
    'apps.order',  # 订单模块
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dailyfresh.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dailyfresh.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'dailyfresh',
        'USER': 'root',
        'PASSWORD': '123',
        'HOST': 'localhost',
        'PORT': 3306,
    }
}

# django认证系统使用的模型类
AUTH_USER_MODEL = 'user.User'

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# 富文本编辑器配置
TINYMCE_DEFAULT_CONFIG = {
    'theme': 'advanced',
    'width': 600,
    'height': 400,
}

# 发送邮件配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# smpt服务地址
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 25
# 发送邮件的邮箱
EMAIL_HOST_USER = 'xiaomin10041204@163.com'
# 在邮箱中设置的客户端授权密码
EMAIL_HOST_PASSWORD = 'python666'
# 收件人看到的发件人
EMAIL_FROM = '天天生鲜<xiaomin10041204@163.com>'

# Django的缓存配置
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

# 配置登录url地址
LOGIN_URL = '/user/login'

# 设置文件存储类
DEFAULT_FILE_STORAGE = 'utils.fdfs.storage.FDFSStorage'

# 设置fdfs使用的client.conf文件路径
FDFS_CLENT_CONF = "./utils/fdfs/client.conf"

# 设置fdfs存储服务器上nginx的ip和端口号
FDFS_URL = "http://10.10.21.152:8888/"

# 全文见多框架的配置
HAYSTACK_CONNECTIONS = {
    'default': {
        # 使用whoosh引擎
        # 'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        'ENGINE': 'haystack.backends.whoosh_cn_backend.WhooshEngine',
        # 索引文件路径
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    }
}

# 当添加、修改、删除数据时，自动生成索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

APPID = "2016101000652497"

ALIPAY_PUBLIC_KEY_STRING = """-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAogevTgSrIyoGMeu1MvqIoW8X76ggqIuT+lo2rKtSPaRK4h318w449wbCCx+r/eFFICkb35vGIgV0zWgHBktpJQXXCU1Zl6JtL5GIPBlu4T5sxcA3P22Jz1H1cm8niig2jBofGb4Qhw34G0iOedn02Zv00dGASMnhHh6dFKyf4+FJ3cl7Odd3unfBmb1z6SODdaM1nyoT1XKAOgla8gvcKh8jHvxpuD+4Dhiyhf4+qdznQmJNv3d4o0bgeD2YVT5+Z/rWgtTbNW9PU862wo2aWF3cbheFi6musP09Gzs/nclfPzijDUB3SZzQe7VNh0UwhMqZ+hZtd06pJX777RO7CwIDAQAB
-----END PUBLIC KEY-----"""

APP_PRIVATE_KEY_STRING = """-----BEGIN REA PRIVATE KEY-----
MIIEowIBAAKCAQEAz6mmwgohEIq7gpO/acdRire4AXe6GeohT13mRLWIYK+Gf/ezxT+GjG1DM6UJX+JKn1eUacpKBCMe83GxcTFXIdr4Np136TDJ7OcAbprs4csmUa/vw2bxQXBK6PYrYwblUAxN0HlpJh7kPwM7IKut9e/XDMorGLqTgBOI/dLCvfIdNU1jZ+ozppIo93fEGqTjC/HUis5EziyEHmZbnLJGGgufdiVA2H+HVL68sDUd1VpSWqHAE+HrH3sVwP80wR2zgcz47XYUK5/0h0m7QcW4jbqNEvMJ+CRHS7YLC/ucBwZrNGCyXTEXRx0h4mrz4FeAKyFPX0zy0ZY+pBRdTgOltQIDAQABAoIBAFqroYMhtxQo7vxxlGcUPzdJRk9lvl0oTEkCH9OqS5Sjrx9awSSDuzS/VFNNYQ17mcd/Du8uAylRSGdVIfvhZkEDAdOe58dqpRAKQLcKcBmagO2z2wU/gmFnLV4Qdhsz3JYZ+TPofw/E9zXILF30d+1lPkl4UF7owBRw8ySYjK0wKyiK/2YqGFxQOLdvbzqYzt14kHW7u67g+NeV5/zcHCze9yXVymVAgUGctE/Fjm1vdJf+dOWr5qa3SPkGzd8a95rnW2pDkOc51ck7Q+9uq+xSRNyJAsL4u66ENagwYPaIdMdGtQ/FfERcUQcL32n+zAf5zVcA/aH6qGWoFV+PAFUCgYEA8Hbc4FB4OmmXTD0j1/aktIfqGJosGg8SWZZYfUNjRD0aorm2Z+kBKkHbwEpEGoIDF12aY2PLr01PDu/ZtA8b4A0d4wlH2vtFkJ2bWHDXLXxSDUFMM0w+RXlc4qlctAp4ikbh6oOgvWXybTqJ6LRglm0oGh3Ng5xBuPZYgC/EW7MCgYEA3RRE+siPjfMoiHlgPFFOAsiQfR/8HCP8Aq3tJYc2JSE3/EE3Iumd4s/TO2l+jTBhIj9pB8koBmxxiug65z+Mg9fj8lnQ/e4ZRQeGmZ2C/Kjy5dYEyBbNkZr0EkHgciMQhP0H3Ne5l+yGAjw/ENO3O479GxbpATH7S/sUah2uJPcCgYBfvSNx1/gWYaYQf6M+v/+RtS96Ph/i/C81JgvzS5pBOAbb1Q8PzhBdr7z7kVYOK8dpTSZD/h7BnAknDE3kR8O0b+R/WVmXkUWAL5ADJWI2xPGyP1ZEck20wX4+7GlxcV3OyCv4gBHGdsmPvafc07xFCA7YXxdNGDB+oO5ZkysdywKBgQDK/qGX5DBsFqlRJqHGwKDwzVhei8/hxujPTQRDQTPmQ+o0JW2LERd3+3vpQaSB37pQyAiYrYui2lAnS7VKQH+1T7ZuASp0/vsU9yQQSSDM/hSKFUmur8FxwOX7HaIJK0kv02Y00aAIb5Vc2BTQTpYgidq91Pt9rXcg/RpxlW8hYQKBgAEdfsZdixuI6eXP2nNKcuhSawphWeq8k2uwcdv+owLHD2LoQLW3RC6kJtxhzQNvnGpXUb6Sui/QJjp3vJieEoedUQ8Kc5dne6oDKaRIQHu5VbyIzvqrgncTvYg92PpYXT688ERCyppHaDFlAYKjTIHLhsxcynxhR4hba/UcHHyN
-----END REA PRIVATE KEY-----"""


# MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAz6mmwgohEIq7gpO/acdRire4AXe6GeohT13mRLWIYK+Gf/ezxT+GjG1DM6UJX+JKn1eUacpKBCMe83GxcTFXIdr4Np136TDJ7OcAbprs4csmUa/vw2bxQXBK6PYrYwblUAxN0HlpJh7kPwM7IKut9e/XDMorGLqTgBOI/dLCvfIdNU1jZ+ozppIo93fEGqTjC/HUis5EziyEHmZbnLJGGgufdiVA2H+HVL68sDUd1VpSWqHAE+HrH3sVwP80wR2zgcz47XYUK5/0h0m7QcW4jbqNEvMJ+CRHS7YLC/ucBwZrNGCyXTEXRx0h4mrz4FeAKyFPX0zy0ZY+pBRdTgOltQIDAQAB
